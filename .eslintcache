[{"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/index.js":"1","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/reportWebVitals.js":"2","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/App.js":"3","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/InfoBox.js":"4","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/Map.js":"5","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/Table.js":"6","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/util.js":"7","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/LineGraph.js":"8"},{"size":500,"mtime":1607864120233,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1607864120233,"results":"11","hashOfConfig":"10"},{"size":3528,"mtime":1607936333070,"results":"12","hashOfConfig":"10"},{"size":525,"mtime":1607874627284,"results":"13","hashOfConfig":"10"},{"size":588,"mtime":1607936646356,"results":"14","hashOfConfig":"10"},{"size":343,"mtime":1607880679625,"results":"15","hashOfConfig":"10"},{"size":137,"mtime":1607881561348,"results":"16","hashOfConfig":"10"},{"size":2097,"mtime":1607934806752,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tfji1r",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/index.js",[],["36","37"],"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/reportWebVitals.js",[],"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/App.js",["38"],"import \"./App.css\";\nimport {\n  CardContent,\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  });\n\n  // USE-EFFECT : Runs a peice of code...\n  // based on a given condition..\n\n  useEffect(() => {\n    // the code inside will run once ..\n    // when the ocmponent load sand not again\n    // async -> send a request, wait for it , do something with it\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country, // UNITED STATE, UNITED KINGDOM\n            value: country.countryInfo.iso2, // UK,USA,FR\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n        });\n    };\n    getCountriesData(countries);\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n\n        // All of the data data...\n        // from the country response\n        setCountryInfo(data);\n      });\n\n    //\n    //\n  };\n  console.log(\"CountryInfo:: >>\", countryInfo);\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER </h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide  \">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            title=\"CoronaVirus cases\"\n            cases={countryInfo.todayCases}\n            total={2000}\n          />\n          <InfoBox\n            title=\"Recovered \"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.cases}\n          />\n          <InfoBox\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={4000}\n          />\n        </div>\n        <Map />\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new Cases</h3>\n          <LineGraph />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/InfoBox.js",[],"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/Map.js",[],"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/Table.js",[],"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/util.js",[],"/home/lifeless/Desktop/projects/covid-19 Tracker/covid-19-tracker/src/LineGraph.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":54,"column":6,"nodeType":"45","endLine":54,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [countries]",{"range":"52","text":"53"},[1560,1562],"[countries]"]